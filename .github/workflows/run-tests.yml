name: Run Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  frontend-tests:
    name: Run Jest Tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: mobile  # Set working directory to mobile/

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run Jest Tests
        run: npx jest --ci --coverage --runInBand 

  backend-tests:
    name: Run Django Tests
    runs-on: ubuntu-latest
    env:
      DJANGO_ENV: test
      DJANGO_SETTINGS_MODULE: config.settings.test
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
      USE_DOCKER: ${{ secrets.USE_DOCKER }}
      CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      REDIS_URL: ${{ secrets.REDIS_URL }}
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      DEBUG: false
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      DJANGO_AWS_ACCESS_KEY_ID: ${{ secrets.DJANGO_AWS_ACCESS_KEY_ID }}
      DJANGO_AWS_S3_REGION_NAME: ${{ secrets.DJANGO_AWS_S3_REGION_NAME }}
      DJANGO_AWS_SECRET_ACCESS_KEY: ${{ secrets.DJANGO_AWS_SECRET_ACCESS_KEY }}
      DJANGO_AWS_STORAGE_BUCKET_NAME: ${{ secrets.DJANGO_AWS_STORAGE_BUCKET_NAME }}
      DJANGO_ADMIN_URL: ${{ secrets.DJANGO_ADMIN_URL }}
      EMAIL_BACKEND: ${{ secrets.EMAIL_BACKEND }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
      EMAIL_USE_SSL: ${{ secrets.EMAIL_USE_SSL }}
      EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
      MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
      MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432

    defaults:
      run:
        working-directory: backend/sep2025_project_team_004

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.12


      - name: Create virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."; sleep 1
          done

      - name: Run All Non-Store Migrations
        run: |
          source venv/bin/activate
          python manage.py migrate account
          python manage.py migrate admin
          python manage.py migrate auth
          python manage.py migrate authtoken
          python manage.py migrate contenttypes
          python manage.py migrate django_celery_beat
          python manage.py migrate friends
          python manage.py migrate mfa
          python manage.py migrate payment
          python manage.py migrate sensors
          python manage.py migrate sessions
          python manage.py migrate sites
          python manage.py migrate socialaccount
          python manage.py migrate users
          python manage.py migrate store 0001 --noinput

      - name: Fake store.0002_product_created_at_review
        run: |
          source venv/bin/activate
          python manage.py migrate store 0002_product_created_at_review --fake

      - name: Finish Remaining Migrations
        run: |
          source venv/bin/activate
          python manage.py migrate --noinput
          python manage.py showmigrations

      - name: Run Django Tests
        run: |
          source venv/bin/activate
          python -m pytest
